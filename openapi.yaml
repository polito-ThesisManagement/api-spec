openapi: '3.0.3'
info:
  version: '1.0.0'
  title: 'Polito Thesis Management API'
servers:
  - url: https://didattica.polito.it/api
    description: Production server (uses live data)
  - url: https://didattica.polito.it/mock/api
    description: Mock server (uses example data)
security:
  - bearerAuth: []
paths:
    /auth/login:
        post:
            tags:
                - Auth
            security: [ ]
            summary: Login
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Identity'
                                required: [data]
                500:
                    $ref: '#/components/responses/ErrorResponse'
    /auth/logout:
        delete:
            tags:
                - Auth
            summary: Logout
            description: Invalidates the provided token
            operationId: logout
            responses:
                200:
                    description: Success
                500:
                    $ref: '#/components/responses/ErrorResponse'
    /thesis-proposals:
        get:
            tags:
              - Thesis proposals
            summary: List thesis proposals | Elenca proposte di tesi
            operationId: getThesisProposals
            parameters: 
                - $ref: '#/components/parameters/languageQueryParam'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ThesisProposalOverview'
                                required: [data]
                500:
                    $ref: '#/components/responses/ErrorResponse'
    /thesis-proposals/{thesisProposalId}:
        get:
            tags:
              - Thesis proposals
            summary: Show thesis proposal | Mostra proposta di tesi
            operationId: getThesisProposal
            parameters:
                - $ref: '#/components/parameters/thesisProposalIdParam'
                - $ref: '#/components/parameters/languageQueryParam'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ThesisProposal'
                                required: [data]
                404:
                    description: Thesis proposal not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /companies:
        get:
            tags: 
                - Companies
            summary: List companies | Elenca aziende
            operationId: getCompanies
            responses:
                200:
                  description: Success
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              $ref: '#/components/schemas/Company'
                        required: [data]
                500:
                    $ref: '#/components/responses/ErrorResponse'
    /supervisors:
        get:
            tags:
                - Supervisors
            summary: List supervisors | Elenca supervisori
            operationId: getSupervisors
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Supervisor'
                                required: [data]
                500:
                    $ref: '#/components/responses/ErrorResponse'
    /thesis-application/eligibility:
        get:
            tags:
                - Thesis application
            summary: Check if the authenticated student is eligible to send a thesis application | Controlla se lo studente autenticato Ã¨ idoneo per inviare una richiesta di tesi
            operationId: checkThesisApplicationEligibility
            responses:
                200:
                    description: Success 
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            studentId:
                                                type: string
                                                example: 's123456'
                                            eligible:
                                                type: boolean
                                                description: Whether the student is eligible to send a thesis start request
                                                example: true
                500:
                    $ref: '#/components/responses/ErrorResponse'
    /thesis-application:
        post:  
            tags:
                - Thesis application              
            summary: Submit thesis application | Invia richiesta di tesi
            operationId: submitThesisApplication
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ThesisApplicationRequest'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ThesisApplicationResponse'
                                required: [data]
                500:
                    $ref: '#/components/responses/ErrorResponse'
        get:
            tags:
                - Thesis application
            summary: Get the authenticated student's last thesis application | Mostra l'ultima richiesta di tesi dello studente autenticato
            operationId: getThesisApplication
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ThesisApplicationResponse'
                                required: [data]
                404:
                    description: Thesis request not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    $ref: '#/components/responses/ErrorResponse'
        delete:
            tags:
                - Thesis application            
            summary: Delete the authenticated student's last thesis start request | Cancella l'ultima richiesta di tesi dello studente autenticato
            operationId: deleteThesisRequest
            responses:
                200:
                    description: Success
                404:
                    description: Thesis request not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    $ref: '#/components/responses/ErrorResponse'
components:
    parameters:
        languageQueryParam:
            name: lang
            in: query
            required: false
            schema:
                type: string
                enum: [it, en]
                default: it
        thesisProposalIdParam:
            name: thesisProposalId
            in: path
            required: true
            schema:
                type: integer
    responses:
        ErrorResponse:
            description: Server error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
    schemas:
        Attachment:
            type: object
            properties:
                id:
                    type: integer
                    example: 0
                filename:
                    type: string
                    example: 'requirements.pdf'
                mimeType:
                    type: string
                    example: image/png
                sizeInKiloBytes:
                    type: integer
                    example: 305
            required: [id, filename, mimeType, sizeInKiloBytes]
        Company:
            type: object
            properties:
                id:
                  type: integer
                  example: 1
                corporateName:
                    type: string
                    example: 'Accenture SpA'
                registeredOffice:
                    type: object
                    properties:
                        street:
                            type: string
                            example: 'Via Privata Nino Bonnet 10/10A'
                        postalCode:
                            type: string
                            example: '20154'
                        city:
                            type: string
                            example: 'Milano'
                        stateOrProvince:
                            type: string
                            example: 'MI'
                        country:
                            type: string
                            example: 'Italy'
                    required: [street, city, country]
            required: [id, corporateName, registeredOffice]
        Error:
            type: object
            properties:
                code:
                    type: integer
                    example: 2
                message:
                    type: string
                    example: Error message
            required: [code, message]
        Identity:
            type: object
            properties:
                username:
                    type: string
                    example: 's290683'
                type:
                    type: string
                    example: 'student'
                token:
                    type: string
                    example: c679fa38ff665df6a676acd833194385
            required: [ username, type, token ]
        LoginRequest:
            type: object
            properties:
                username:
                    type: string
                    example: s290683
                password:
                    type: string
                    example: moreSecret
            required: [username, password]
        Supervisor:
            type: object
            allOf:
              - $ref: '#/components/schemas/SupervisorOverview'
            properties:
                firstName:
                    type: string
                    example: 'Marco'
                lastName:
                    type: string
                    example: 'Torchiano'
                role: 
                    type: string
                    example: "Docente"
                facilityShortName:
                    type: string
                    example: "DAUIN"
                profileUrl: 
                    type: string
                    example: "https://www.dauin.polito.it/personale/scheda/(matricola)/003019"
                email:
                    type: string
                    example: 'marco.torchiano@polito.it'
            required: [firstName, lastName]
        SupervisorOverview:
            type: object
            properties:
                id:
                    type: integer
                    example: 12345
                type: 
                    type: string
                    enum: 
                        - internal
                        - external
            required: [id, type]
        Teacher:
            allOf:
                - $ref: '#/components/schemas/TeacherOverview'
            type: object
            properties:
                role: 
                    type: string
                    example: "Docente"
                facilityShortName:
                    type: string
                    example: "DAUIN"
                profileUrl: 
                    type: string
                    example: "https://www.dauin.polito.it/personale/scheda/(matricola)/003019"
                email:
                    type: string
                    example: 'marco.torchiano@polito.it'
            required: [role, facilityShortName, profileUrl, email]
        TeacherOverview:
            type: object
            properties:
                id:
                    type: integer
                    example: 12345
                firstName:
                    type: string
                    example: 'Marco'
                lastName:
                    type: string
                    example: 'Torchiano'
            required: [id, firstName, lastName]
        ThesisApplicationRequest:
            type: object
            properties:
                topic:
                    type: string
                    description: The topic of the thesis
                    example: "A Mobile App for Human Activity Recognition"
                supervisor:
                    $ref: '#/components/schemas/SupervisorOverview'
                coSupervisors:
                    type: array
                    description: Optional co-supervisors for the thesis
                    items:
                        $ref: '#/components/schemas/SupervisorOverview'
                companyId:
                    type: integer
                    description: The company id where the thesis may be developed (optional)
                    example: 1
            required: [topic, supervisor]
        ThesisApplicationResponse:
            type: object
            properties:
                id:
                    type: integer
                    description: The identifier for the current thesis request
                    example: 258674
                topic:
                    type: string
                    description: The topic of the thesis
                    example: "A Mobile App for Human Activity Recognition"
                supervisor:
                    type: object
                    description: The main supervisor for the thesis
                    $ref: '#/components/schemas/Supervisor'
                coSupervisors:
                    type: array
                    description: Optional internal co-supervisors for the thesis
                    items:
                        $ref: '#/components/schemas/Supervisor'
                company:
                    type: object
                    description: The company where the thesis may be developed (optional)
                    $ref: '#/components/schemas/Company'
                submissionDate:
                    type: string
                    format: date-time
                    description: The date when the thesis request was submitted
                    example: '2021-06-01T00:00:00Z'
                status:
                    $ref: '#/components/schemas/ThesisApplicationStatus'
            required: [id, topic, supervisor, submissionDate, status] 
        ThesisApplicationStatus:
            type: string
            enum:
                - 'pending'
                - 'approved'
                - 'rejected'
                - 'cancelled'
        ThesisProposal:
            allOf:
                - $ref: '#/components/schemas/ThesisProposalOverview'
            type: object
            properties:
                supervisor:
                    type: object
                    $ref: '#/components/schemas/Teacher'
                internalCoSupervisors:
                    type: array
                    items:
                        $ref: '#/components/schemas/Teacher'
                externalCoSupervisors:
                    type: string
                    example: 'Prof. Flavio Esposito - St. Louis University, USA'
                type:
                    type: string
                    example: 'Tesi sperimentale'
                attachment:
                    $ref: '#/components/schemas/Attachment'
                link:
                    type: string
                requiredSkills:
                    type: string
                notes:
                    type: string   
            required: [supervisor]
        ThesisProposalOverview:
            type: object
            properties:
                id:
                    type: integer
                    example: 258674
                topic:
                    type: string
                    example: 'Un Applicativo Mobile per il Riconoscimento delle AttivitÃ  Umane'
                isInternal:
                    type: boolean
                    description: If true, it's an internal thesis at Politecnico, otherwise it's external (in a company)
                isAbroad:
                    type: boolean
                    description: If true, it's an abroad thesis
                keywords:
                    type: array
                    items:
                        type: string
                    example: ['HAR', 'Sviluppo Applicazioni Mobili']
                supervisor:
                    type: object
                    $ref: '#/components/schemas/TeacherOverview'
                internalCoSupervisors:
                    type: array
                    items:
                        $ref: '#/components/schemas/TeacherOverview'
                description:
                    type: string
                    example: "Offrire dati precisi e tempestivi riguardo le attivitÃ  e i comportamenti degli individui si pone come obiettivo primario nel pervasive computing. Innumerevoli applicazioni potenziali sorgono in vari domini come la medicina, la sicurezza, l'intrattenimento e le operazioni tattiche. Nonostante il riconoscimento delle attivitÃ  umane (HAR) sia un campo di esplorazione attivo da oltre un decennio, rimangono aspetti cruciali che, se risolti, potrebbero segnare un cambiamento significativo nel modo in cui gli individui interagiscono con i dispositivi mobili. In questa tesi lo studente svilupperÃ  un'applicazione mobile che puÃ² raccogliere in modo efficiente i dati dell'utente, pre-elaborarli e usarli per riconoscere l'attivitÃ . Questa rilevazione probabilmente avverrÃ  utilizzando un framework di apprendimento distribuito, come il Federated Learning (FL), per combinare la conoscenza di piÃ¹ dispositivi utente."
                creationDate:
                    type: string
                    format: date
                deadline:
                    type: string
                    format: date
            required: [id, topic, isInternal, isAbroad, supervisor, creationDate, deadline]
        